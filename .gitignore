*.pem
*.csv

.env
.env.sh
env.sh
shell/backend_init.sh
private/cloudfront_keys/*
.DS_Store
private/iam_access_keys/*
private/images/*
private/secret_manager_secrets/*


# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Node.js dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# TypeScript build artifacts
dist/
build/
*.tsbuildinfo

# IDE/editor folders
.vscode/
.idea/

# TS coverage and test artifacts
coverage/
jest.*

# Ignore compiled JS (if any)
*.js
*.js.map

# Local script or debug output
*.log
*.bak
*.swp
*.tmp
*.out
